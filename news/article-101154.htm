<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://thebestvpn.github.io/news/article-101154.htm" />
    <meta charset="utf-8">
    <title>FreeRTOS进阶列表和列表项示例分析_操作系统</title>
        <meta name="description" content="目录  前言 1.初始化列表 2.初始化列表项 4.将列表项插入到列表末端    前言 FreeRTOS内核调度大量使用了列表（list）和列表项（list item）数据结构。我们如果想一探Free" />
        <link rel="icon" href="/assets/website/img/clashagent/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="免费最佳VPN翻墙 机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://thebestvpn.github.io/news/article-101154.htm" />
    <meta property="og:site_name" content="免费最佳VPN翻墙 机场订阅官网" />
    <meta property="og:title" content="FreeRTOS进阶列表和列表项示例分析_操作系统" />
    <meta property="og:image" content="https://thebestvpn.github.io/uploads/20250106/d710c0b9c272eecae55aca87aacc08d7.webp" />
        <meta property="og:release_date" content="2025-04-22T08:20:18" />
    <meta property="og:updated_time" content="2025-04-22T08:20:18" />
        <meta property="og:description" content="目录  前言 1.初始化列表 2.初始化列表项 4.将列表项插入到列表末端    前言 FreeRTOS内核调度大量使用了列表（list）和列表项（list item）数据结构。我们如果想一探Free" />
        
    <meta content="width=device-width, initial-scale=1.0" name="viewport">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="FreeRTOS进阶列表和列表项示例分析_操作系统">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <link rel="preconnect" href="https://fonts.googleapis.com/">
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="">
    <link href="/assets/website/css/clashagent/css2.css" rel="stylesheet">
    <link href="/assets/website/css/clashagent/all.min.css" rel="stylesheet">
    <link href="/assets/website/css/clashagent/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/css/clashagent/animate.min.css" rel="stylesheet">
    <link href="/assets/website/css/clashagent/owl.carousel.min.css" rel="stylesheet">
    <link href="/assets/website/css/clashagent/tempusdominus-bootstrap-4.min.css" rel="stylesheet">
    <link href="/assets/website/css/clashagent/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/clashagent/style.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XX6ZTTYY8T"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XX6ZTTYY8T');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="container-xxl bg-white p-0">
        <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <div class="container-xxl position-relative p-0">
                        <nav class="navbar navbar-expand-lg navbar-dark bg-dark px-4 px-lg-5 py-3 py-lg-0">
                <a href="/" class="navbar-brand p-0 xcblog-blog-logo">
                                        <span class="text-primary m-0">免费最佳VPN翻墙</span>
                                    </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
                    <span class="fa fa-bars"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarCollapse">
                    <div class="navbar-nav ms-auto py-0 pe-4">
                                                <a href="/" class="nav-item nav-link">首页</a>
                                                <a href="/free-nodes/" class="nav-item nav-link">免费节点</a>
                                                <a href="/paid-subscribe/" class="nav-item nav-link">推荐机场</a>
                                                <a href="/news/" class="nav-item nav-link">新闻资讯</a>
                                                <a href="/client.htm" class="nav-item nav-link">客户端</a>
                                            </div>
                </div>
            </nav>
            <div class="container-xxl py-5 bg-dark hero-header mb-5">
                <div class="container text-center my-5 pt-5 pb-4">
                    <h1 class="display-3 text-white mb-3 animated slideInDown">FreeRTOS进阶列表和列表项示例分析_操作系统</h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb justify-content-center text-uppercase">
                            <li class="breadcrumb-item"><a href="/">首页</a></li>
                            <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                            <li class="breadcrumb-item text-white active" aria-current="page">正文</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
        <div class="container-xxl py-5">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                <div class="xcblog-blog-detail">
                      				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li>前言</li> <li>1.初始化列表</li> <li>2.初始化列表项</li> <li>4.将列表项插入到列表末端</li> </ul> </div> <p class="maodian"></p> <h2>前言</h2> <p>FreeRTOS内核调度大量使用了列表（list）和列表项（list item）数据结构。我们如果想一探FreeRTOS背后的运行机制，首先遇到的拦路虎就是列表和列表项。对于FreeRTOS内核来说，列表就是它最基础的部分。我们在这一章集中讲解列表和列表项的结构以及操作函数，在下一章讲解任务创建时，会用到本章的知识点。</p> <p>列表被FreeRTOS调度器使用，用于跟踪任务，处于就绪、挂起、延时的任务，都会被挂接到各自的列表中。用户程序如果有需要，也可以使用列表。</p> <p>FreeRTOS列表使用指针指向列表项。一个列表（list）下面可能有很多个列表项（list item），每个列表项都有一个指针指向列表。如图1-1所示。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220423/8f527f2496f5958eed0327d803776486.jpg"></p> <p>图1-1：列表与列表项</p> <p>列表项有两种形式，全功能版的列表项xLIST_ITEM和迷你版的列表项xMINI_LIST_ITEM。我们来看一下它们具体的定义，先看全功能版。</p> <div class="ay1code"> <pre class="brush:cpp;">struct xLIST_ITEM  {       listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE           /*用于检测列表项数据是否完整*/       configLIST_VOLATILE TickType_t xItemValue;           /*列表项值*/       struct xLIST_ITEM * configLIST_VOLATILE pxNext;      /*指向列表中下一个列表项*/       struct xLIST_ITEM * configLIST_VOLATILE pxPrevious;  /*指向列表中上一个列表项*/       void * pvOwner;                                     /*指向一个任务TCB*/       void * configLIST_VOLATILE pvContainer;             /*指向包含该列表项的列表 */       listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE          /*用于检测列表项数据是否完整*/  };  typedef struct xLIST_ITEM ListItem_t;</pre> </div> <p>宏listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE和listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE用于检查列表项数据是否完整，在projdefs.h中，如果将宏configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES设置为1，则使能列表项数据完整性检查，则宏listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE和listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE会被两个已知的数值代替。</p> <p>xItemValue是列表项值，通常是一个被跟踪的任务优先级或是一个调度事件的计数器值。如果任务因为等待从队列取数据而进入阻塞状态，则任务的事件列表项的列表项值保存任务优先级有关信息，状态列表项的列表项值保存阻塞时间有关的信息。这个变量被configLIST_VOLATILE修饰，configLIST_VOLATILE被映射成C语言关键字volatile，表明这个变量是“易变的”，告诉编译器不得对这个变量进行代码优化，因为列表项的成员可能会在中断服务程序中被更新。关于volatile关键字，如果不是熟悉的话，可以参考我的博文《编写优质嵌入式C程序》第3.2.4节。</p> <p>pxNext和pxPrevious是列表项类型指针，用来指向列表中下一个和上一个列表项，通过这两个指针，列表项之间可以形成类似双向链表结构。</p> <p>指针pvOwner通常指向一个任务TCB。</p> <p>指针pvContainer指向包含该列表项的列表。</p> <p>迷你版的列表项xMINI_LIST_ITEM是全功能版列表项xLIST_ITEM的一个子集，定义如下所示：</p> <div class="ay1code"> <pre class="brush:cpp;">struct xMINI_LIST_ITEM  {       listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE           /*用于检测列表项数据是否完整*/       configLIST_VOLATILE TickType_t xItemValue;       struct xLIST_ITEM * configLIST_VOLATILE pxNext;       struct xLIST_ITEM * configLIST_VOLATILE pxPrevious;  typedef struct xMINI_LIST_ITEM MiniListItem_t;</pre> </div> <p>既然有了全功能版的列表项，为什么还要声明迷你版的列表项呢？这是因为列表结构体需要一个列表项成员，但又不需要列表项中的所有字段，所以才有了迷你版列表项。列表结构体定义为：</p> <div class="ay1code"> <pre class="brush:cpp;">typedef struct xLIST  {       listFIRST_LIST_INTEGRITY_CHECK_VALUE                        /*用于检测列表项数据是否完整*/       configLIST_VOLATILE UBaseType_t uxNumberOfItems;       ListItem_t * configLIST_VOLATILE pxIndex;                   /*用于遍历列表*/       MiniListItem_t xListEnd;                                    /*列表项*/       listSECOND_LIST_INTEGRITY_CHECK_VALUE                       /*用于检测列表项数据是否完整*/  }List_t;</pre> </div> <p>和列表项定义相同，宏listFIRST_LIST_INTEGRITY_CHECK_VALUE和listSECOND_LIST_INTEGRITY_CHECK_VALUE用于检查列表项数据是否完整，在projdefs.h中，如果将宏configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES设置为1，则使能列表项数据完整性检查，则宏listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE和listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE会被两个已知的数值代替。</p> <p>uxNumberOfItems表示该列表中挂接的列表项数目，0表示列表为空。</p> <p>列表项类型指针用于遍历列表，列表初始化后，这个指针指向&amp;xListEnd。通过宏listGET_OWNER_OF_NEXT_ENTRY()来获取列表中的下一个列表项。</p> <p>列表项xListEnd用于标记列表结束。xListEnd.xItemValue被初始化为一个常数，其值与硬件架构相关，为0xFFFF（16位架构）或者0xFFFFFFFF（32位架构）。</p> <p>下面我们看一下列表操作。FreeROTS提供了几个API函数，用于初始化列表和列表项以及列表项插入操作。</p> <p class="maodian"></p> <h2>1.初始化列表</h2> <p>列表结构体中包含一个列表项成员，主要用于标记列表结束。初始化列表就是把这个列表项插入到列表中。</p> <div class="ay1code"> <pre class="brush:cpp;">void vListInitialise( List_t * const pxList )  {       /*列表索引指向列表项*/       pxList-&gt;pxIndex = ( ListItem_t * )&amp;( pxList-&gt;xListEnd );                         /* 设置为最大可能值 */       pxList-&gt;xListEnd.xItemValue =portMAX_DELAY;       /* 列表项xListEnd的pxNext和pxPrevious指针指向了它自己 */       pxList-&gt;xListEnd.pxNext = (ListItem_t * ) &amp;( pxList-&gt;xListEnd );       pxList-&gt;xListEnd.pxPrevious= ( ListItem_t * ) &amp;( pxList-&gt;xListEnd );       pxList-&gt;uxNumberOfItems = ( UBaseType_t) 0U;        /* 设置为已知值，用于检测列表数据是否完整*/       listSET_LIST_INTEGRITY_CHECK_1_VALUE(pxList );       listSET_LIST_INTEGRITY_CHECK_2_VALUE(pxList );  }</pre> </div> <p>如果宏configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES设置为1，则使能列表项数据完整性检查，则宏listSET_LIST_INTEGRITY_CHECK_1_VALUE()和listSET_LIST_INTEGRITY_CHECK_2_VALUE被一个已知值代替，默认为0x5a5a（16位架构）或者0x5a5a5a5a（32位架构）。</p> <p>假设禁止列表数据完整性检查，初始化后的列表如图1-2所示，uxNumberOfItems被初始化为0，xListEnd.xItemValue初始化为0xffffffff，pxIndex、xListEnd.pxNext和xListEnd.pxPrevious初始化为指向列表项xListEnd。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220423/94097bccd7b9c064e88a9f93f838d200.jpg"></p> <p>图1-2：初始化后的列表</p> <p class="maodian"></p> <h2>2.初始化列表项</h2> <p>列表项的初始比较简单，只要确保列表项不在任何列表中即可。</p> <div class="ay1code"> <pre class="brush:cpp;">void vListInitialiseItem( ListItem_t * const pxItem )  {       pxItem-&gt;pvContainer = NULL;       /*设置为已知值，用于检测列表项数据是否完整*/       listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE(pxItem );       listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE(pxItem );  }</pre> </div> <p>如果宏configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES设置为1，则使能列表项数据完整性检查，则宏listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE和listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE会被两个已知的数值代替，默认为0x5a5a（16位架构）或者0x5a5a5a5a（32位架构）。</p> <p>假设禁止列表项数据完整性检查，初始化后的列表项如图1-3所示。仅是将指针pvContainer设置为空指针，该指针用于指向包含该列表项的列表，这里设置为NULL表示这个列表项不属于任何列表。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220423/111783ecc2810be57cb1827904a75bba.jpg"></p> <p>图1-3：初始化后的列表项</p> <p>3.将列表项插入到列表中，列表项所在的位置取决于列表项的列表项值（xItemValue）。</p> <p>每个列表项对象都有一个列表项值（xItemValue），通常是一个被跟踪的任务优先级或是一个调度事件的计数器值。调用API函数vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem)可以将pxNewListItem指向的列表项插入到pxList指向的列表中，列表项在列表的位置由pxNewListItem-&gt;xItemValue决定，按照升序排列。</p> <div class="ay1code"> <pre class="brush:cpp;">void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )  {  ListItem_t *pxIterator;  const TickType_t xValueOfInsertion = pxNewListItem-&gt;xItemValue;           /* 检查列表和列表项数据的完整性，仅当configASSERT()定义时有效。*/           listTEST_LIST_INTEGRITY( pxList );           listTEST_LIST_ITEM_INTEGRITY(pxNewListItem );           /*将新的列表项插入到列表，根据xItemValue的值升序插入列表。*/           if( xValueOfInsertion == portMAX_DELAY)           {                     pxIterator =pxList-&gt;xListEnd.pxPrevious;           }           else           {                     for( pxIterator = (ListItem_t * ) &amp;( pxList-&gt;xListEnd );pxIterator-&gt;pxNext-&gt;xItemValue &lt;= xValueOfInsertion; pxIterator =pxIterator-&gt;pxNext )                     {                              /* 这里为空 */                     }           }           pxNewListItem-&gt;pxNext =pxIterator-&gt;pxNext;           pxNewListItem-&gt;pxNext-&gt;pxPrevious= pxNewListItem;           pxNewListItem-&gt;pxPrevious =pxIterator;           pxIterator-&gt;pxNext = pxNewListItem;           pxNewListItem-&gt;pvContainer = ( void* ) pxList;           ( pxList-&gt;uxNumberOfItems )++;  }</pre> </div> <p>根据xItemValue的值将新的列表项插入到列表。如果列表中存在与新列表项xItemValue值相同的列表项，则新插入的列表项位于它之后。如果列表项的xItemValue值等于portMAX_DELAY（列表结束标记，我们在讲列表数据结构时，说到每个列表数据结构体中都有一个列表项成员xListEnd，用于标记列表结束。xListEnd.xItemValue被初始化为一个常数，其值与硬件架构相关，为0xFFFF或者0xFFFFFFFF。这个常数在移植层定义，即宏portMAX_DELAY），则表示到达了列表结束位置。</p> <p>我们用图示的方法来讲解这个函数，我们假设一个列表项值（xItemValue）为32的列表项插入到如图1-2所示的初始化后的列表中，调用vListInsert()函数后，列表和列表项的关系如图1-4所示。列表项xListItem_1的成员指针pxNext和pxPrevious都指向了xListEnd，而xListEnd的成员指针pxNext和pxPrevious都指向了列表项xListItem_1；列表项xListItem_1的成员指针pvContainer指向了列表xList_1；列表成员uxNumberOfItems为1。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220423/fcc029d62b676a4a1e7abbb0a0efe2f5.jpg"></p> <p>图1-4：将列表项插入到列表</p> <p>在此基础上，如果再将一个列表项值（xItemValue）为40的列表项插入到列表中，调用vListInsert()函数后，列表和列表项的关系如图1-5所示。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220423/9e5d43743b489541bc4c17ca465ceee3.jpg"></p> <p>图1-5：将列表项插入到列表</p> <p class="maodian"></p> <h2>4.将列表项插入到列表末端</h2> <p>第3节讲的API插入函数是根据列表项中的列表项值（xItemValue）来决定插入位置的，本节所讲的API函数vListInsertEnd()是简单的将列表项插入到列表的末端。在下一章任务创建分析的文章中，将会遇到这个API函数，到时再以图标的形式分析这个函数，现在给出这个函数的源码。</p> <div class="ay1code"> <pre class="brush:cpp;">void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )  {  ListItem_t* const pxIndex = pxList-&gt;pxIndex;           /*检查列表和列表项数据的完整性，仅当configASSERT()定义时有效。*/           listTEST_LIST_INTEGRITY( pxList );           listTEST_LIST_ITEM_INTEGRITY(pxNewListItem );           /*向列表中插入新的列表项*/           pxNewListItem-&gt;pxNext = pxIndex;           pxNewListItem-&gt;pxPrevious =pxIndex-&gt;pxPrevious;           mtCOVERAGE_TEST_DELAY();           pxIndex-&gt;pxPrevious-&gt;pxNext =pxNewListItem;           pxIndex-&gt;pxPrevious = pxNewListItem;           pxNewListItem-&gt;pvContainer = ( void* ) pxList;           ( pxList-&gt;uxNumberOfItems )++;  }</pre> </div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-101148.htm">在Vue项目里使用element ui在input框上使用v-model.trim导致输入空格失效</a></p>
                                        <p>下一个：<a href="/news/article-101896.htm">对vue中的render理解</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-91225.htm" title="动物疫苗的储存不合格区什么颜色的线（动物疫苗运输与储存规范）">动物疫苗的储存不合格区什么颜色的线（动物疫苗运输与储存规范）</a></li>
                        <li class="py-2"><a href="/news/article-98285.htm" title="上海宠物领养站电话地址（上海宠物领养站电话地址是多少）">上海宠物领养站电话地址（上海宠物领养站电话地址是多少）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-15-free-high-speed-nodes.htm" title="免费最佳VPN翻墙 | 4月15日21.3M/S|免费Shadowrocket/V2ray/SSR/Clash订阅机场">免费最佳VPN翻墙 | 4月15日21.3M/S|免费Shadowrocket/V2ray/SSR/Clash订阅机场</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-17-free-v2ray.htm" title="免费最佳VPN翻墙 | 4月17日19.6M/S|免费SSR/Shadowrocket/Clash/V2ray订阅机场">免费最佳VPN翻墙 | 4月17日19.6M/S|免费SSR/Shadowrocket/Clash/V2ray订阅机场</a></li>
                        <li class="py-2"><a href="/news/article-100536.htm" title="tomcat服务器项目迁移到另外一台tomcat服务器">tomcat服务器项目迁移到另外一台tomcat服务器</a></li>
                        <li class="py-2"><a href="/news/article-90104.htm" title="宠物医院寄养协议书范本（宠物医院寄养费多少钱）">宠物医院寄养协议书范本（宠物医院寄养费多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-96818.htm" title="宠物领养平台免费有哪些呢知乎（宠物领养网免费领养宠物的网站宠物领养中心）">宠物领养平台免费有哪些呢知乎（宠物领养网免费领养宠物的网站宠物领养中心）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-20-node-share.htm" title="免费最佳VPN翻墙 | 4月20日20M/S|免费Clash/SSR/V2ray/Shadowrocket订阅机场">免费最佳VPN翻墙 | 4月20日20M/S|免费Clash/SSR/V2ray/Shadowrocket订阅机场</a></li>
                        <li class="py-2"><a href="/news/article-93815.htm" title="最适合穷人养的狗（最适合穷人养的狗有哪些）">最适合穷人养的狗（最适合穷人养的狗有哪些）</a></li>
                        <li class="py-2"><a href="/news/article-98954.htm" title="动物疫苗上市a股龙头（动物疫苗行业龙头）">动物疫苗上市a股龙头（动物疫苗行业龙头）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
            <div class="container-fluid bg-dark text-light footer pt-5 mt-5 wow fadeIn" data-wow-delay="0.1s">
        <div class="container">
            <div class="copyright">
                <div class="row">
                    <div class="col-md-6 text-center text-md-start mb-3 mb-md-0">
                                            <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <p class="text-white-50 f-15 mb-0">
                            <a href="/">免费最佳VPN翻墙 机场订阅官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-md-6 text-center text-md-end">
                        <div class="footer-menu">
                            <a href="/">Home</a>
                            <a href="#">Cookies</a>
                            <a href="#">Help</a>
                            <a href="#">FQAs</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top"><i class="bi bi-arrow-up"></i></a>
    <script src="/assets/website/js/frontend/clashagent/jquery-3.6.0.min.js"></script>
    <script src="/assets/website/js/frontend/clashagent/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/clashagent/main.js"></script>
    <script src="/assets/website/js/frontend/clashagent/rocket-loader.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
    </div>
</body>

</html>